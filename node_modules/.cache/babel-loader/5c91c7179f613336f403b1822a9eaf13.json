{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\github-finder\\\\src\\\\context\\\\github\\\\GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUsers = async () => {\n    const response = await fetch(`${GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    setUsers(data);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubProvider, \"5wd2UtlyTSQzFlzM8p6DyF8a+/M=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["D:/Projects/github-finder/src/context/github/GithubContext.js"],"names":["createContext","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","users","setUsers","useState","loading","setLoading","fetchUsers","response","fetch","headers","Authorization","data","json"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,aAAa,gBAAED,aAAa,EAAlC;AAEA,MAAME,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AAC3C,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBC,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBF,QAAQ,CAAC,IAAD,CAArC;;AAEA,QAAMG,UAAU,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAG,GAAEf,UAAW,QAAhB,EAAwB;AAChDgB,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,SAAQb,YAAa;AADhC;AADuC,KAAxB,CAA5B;AAMA,UAAMc,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEAV,IAAAA,QAAQ,CAACS,IAAD,CAAR;AACAN,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEP,GAZG;;AAaA,sBAAO,QAAC,aAAD,CAAe,QAAf;AACC,IAAA,KAAK,EAAE;AAACJ,MAAAA,KAAD;AAAOG,MAAAA;AAAP,KADR;AAAA,cAGFJ;AAHE;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAvBM;;GAAMD,c;;KAAAA,c;AAyBb,eAAeP,aAAf","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst GithubContext =createContext()\r\n\r\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL\r\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN\r\n\r\nexport const GithubProvider = ({children})  => {\r\n    const [users,setUsers] = useState([])\r\n    const [loading,setLoading] = useState(true) \r\n\r\n    const fetchUsers = async () => {\r\n        const response = await fetch (`${GITHUB_URL}/users`,{\r\n            headers: {\r\n                Authorization: `token ${GITHUB_TOKEN}`\r\n            }\r\n        })\r\n\r\n        const data = await response.json()\r\n\r\n        setUsers(data)\r\n        setLoading(false)\r\n\r\n}\r\n    return <GithubContext.Provider \r\n            value={{users,loading}}\r\n    >\r\n        {children}\r\n    </GithubContext.Provider>\r\n\r\n}\r\n\r\nexport default GithubContext"]},"metadata":{},"sourceType":"module"}