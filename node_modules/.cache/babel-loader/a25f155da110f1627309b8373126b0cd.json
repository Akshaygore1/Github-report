{"ast":null,"code":"import _slicedToArray from\"D:/Projects/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useReducer}from\"react\";import AlertReducer from\"./AlertReducer\";import{jsx as _jsx}from\"react/jsx-runtime\";var AlertContext=/*#__PURE__*/createContext();export var AlertProvider=function AlertProvider(_ref){var children=_ref.children;var initialState=null;var _useReducer=useReducer(AlertReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];//set an alert\nvar setAlert=function setAlert(msg,type){dispatch({type:'SET_ALERT',payload:{msg:msg,type:type}});setTimeout(function(){return dispatch({type:'REMOVE_ALERT'});});};return/*#__PURE__*/_jsx(AlertContext.Provider,{value:{alert:state,setAlert:setAlert},children:children});};export default AlertContext;","map":{"version":3,"sources":["D:/Projects/github-finder/src/context/Alert/AlertContext.js"],"names":["createContext","useReducer","AlertReducer","AlertContext","AlertProvider","children","initialState","state","dispatch","setAlert","msg","type","payload","setTimeout","alert"],"mappings":"+GAAA,OAASA,aAAT,CAAwBC,UAAxB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,2CAEA,GAAMC,CAAAA,YAAY,cAAGH,aAAa,EAAlC,CAEA,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CAEzC,GAAMC,CAAAA,YAAY,CAAG,IAArB,CAEA,gBAAyBL,UAAU,CAACC,YAAD,CAAcI,YAAd,CAAnC,4CAAOC,KAAP,iBAAaC,QAAb,iBAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAKC,IAAL,CAAc,CAC3BH,QAAQ,CAAC,CACLG,IAAI,CAAE,WADD,CAELC,OAAO,CAAE,CAACF,GAAG,CAAHA,GAAD,CAAKC,IAAI,CAAJA,IAAL,CAFJ,CAAD,CAAR,CAKAE,UAAU,CAAE,iBAAML,CAAAA,QAAQ,CAAE,CAACG,IAAI,CAAE,cAAP,CAAF,CAAd,EAAF,CAAV,CACH,CAPD,CASA,mBAAO,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAK,CAACG,KAAK,CAACP,KAAP,CAAcE,QAAQ,CAARA,QAAd,CAAjC,UACFJ,QADE,EAAP,CAGH,CAnBM,CAqBP,cAAeF,CAAAA,YAAf","sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport AlertReducer from \"./AlertReducer\";\r\n\r\nconst AlertContext = createContext()\r\n\r\nexport const AlertProvider = ({children}) => {\r\n\r\n    const initialState = null\r\n\r\n    const [state,dispatch] = useReducer(AlertReducer,initialState)\r\n\r\n    //set an alert\r\n    const setAlert = (msg,type) => {\r\n        dispatch({\r\n            type: 'SET_ALERT',\r\n            payload: {msg,type}\r\n        })\r\n\r\n        setTimeout (() => dispatch ({type: 'REMOVE_ALERT'}))\r\n    }\r\n\r\n    return <AlertContext.Provider value={   {alert:state, setAlert }}>\r\n        {children}\r\n        </AlertContext.Provider>\r\n}\r\n\r\nexport default AlertContext  "]},"metadata":{},"sourceType":"module"}