{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\github-finder\\\\src\\\\context\\\\github\\\\GithubContext.js\";\nimport { createContext, useReducer } from \"react\";\nimport githubReducer from \"./GithubReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst REACT_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const intialSate = {\n    users: []\n  };\n  const [state, dispatch] = userReducer(githubReducer, intialSate);\n\n  const fetchUsers = async () => {\n    const response = await fetch(`${process.env.REACT_APP_GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${process.env.REACT_APP_GITHUB_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    dispatch({\n      type: 'GET_USERS',\n      payload: data\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["D:/Projects/github-finder/src/context/github/GithubContext.js"],"names":["createContext","useReducer","githubReducer","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","REACT_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","intialSate","users","state","dispatch","userReducer","fetchUsers","response","fetch","headers","Authorization","data","json","type","payload"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEA,MAAMI,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,WAAW,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAhC;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAiB;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AAC3C,QAAMC,UAAU,GAAG;AACjBC,IAAAA,KAAK,EAAE;AADU,GAAnB;AAIA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBC,WAAW,CAACd,aAAD,EAAeU,UAAf,CAApC;;AAEA,QAAMK,UAAU,GAAG,YAAW;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,OAAO,CAACC,GAAR,CAAYC,oBAAqB,QAArC,EAA6C;AACxEa,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQhB,OAAO,CAACC,GAAR,CAAYG,sBAAuB;AADpD;AAD+D,KAA7C,CAA5B;AAMC,UAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACDR,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIH,GAZD;;AAcA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAClCT,MAAAA,KAAK,EAAEC,KAAK,CAACD;AADqB,KAA/B;AAAA,cAGFF;AAHE;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CA1BM;KAAMD,c;AA4Bb,eAAgBP,aAAhB","sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport githubReducer from \"./GithubReducer\";\r\n\r\nconst GithubContext = createContext() \r\n\r\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL\r\nconst REACT_TOKEN = process.env.REACT_APP_GITHUB_TOKEN\r\n\r\nexport const GithubProvider = ({children})  => {\r\n    const intialSate = {\r\n      users: []\r\n    }\r\n\r\n    const [state,dispatch] = userReducer(githubReducer,intialSate)\r\n\r\n    const fetchUsers = async() => {\r\n        const response = await fetch(`${process.env.REACT_APP_GITHUB_URL}/users`,{\r\n         headers: {\r\n           Authorization: `token ${process.env.REACT_APP_GITHUB_TOKEN}`,\r\n         },\r\n       })\r\n     \r\n         const data = await response.json()\r\n        dispatch({\r\n          type: 'GET_USERS',\r\n          payload: data,\r\n        })\r\n    }\r\n\r\n    return <GithubContext.Provider value={{\r\n        users: state.users,\r\n    }}>\r\n        {children}\r\n    </GithubContext.Provider>\r\n}\r\n\r\nexport default  GithubContext"]},"metadata":{},"sourceType":"module"}